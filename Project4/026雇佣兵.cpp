#include<iostream>
using namespace std;
int main()
{
	int M = 0, N, X;
	cin >> M >> N >> X;
	int m = 0;
	while(X>=1)
	{
		if (m != M)
		{
			X--;
			m += N;
			if (m >= M)m = M;
		}
		if (m == M)
		{
			int n = N;
			while (m >= n)
			{
				
				m -= n;
				N++;
			}
			m = 0;
		}
	}
	cout << N << endl;
	return 0;
}
//50ee165c64804bd10ae09f40899fc16adef2e5dceba3ec1e579b33324da83474
//雇佣兵的体力最大值为M，初始体力值为0、战斗力为N、拥有X个能量元素。

//当雇佣兵的体力值为M时，才可以参加一个为期M天的战斗期，战斗期结束体力值将为0。在同一个战斗期内，雇佣兵每连续战斗n天，战斗力就会上升1点，n为当前战斗期开始时的战斗力。

//一个战斗期结束后，雇佣兵需要用若干个能量元素使其体力恢复到最大值M，从而参加下一个战斗期。每个能量元素恢复的体力值不超过当前的战斗力。每个能量元素只能使用一次。

//请问：雇佣兵的战斗力最大可以到达多少。