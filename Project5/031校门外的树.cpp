//某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。
//我们可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；
//数轴上的每个整数点，即0，1，2，……，L，都种有一棵树。
#include<iostream>
using namespace std;
int main()
{
	int L=1, M=1;
	cin >> L >> M;
	char I[10001] = { 0 };
	for (int i = 0; i <= L; i++)
		I[i] = 1;
	int a[101][2] = {};
	for (int i = 0; i < M; i++)
	{
		cin >> a[i][0] >> a[i][1];
		for (int k = a[i][0]; k <= a[i][1]; k++)
			I[k] = 0;
	}
	for (int k = 0; k <= L; k++)
	{
		if (I[k] == 1)a[100][1]++;
		else if (I[k] == 0)a[100][0]++;
	}
	cout << a[100][1]<<endl;
	cout << a[100][0]<<endl;
	return 0;
}
//b7a997c95f0127a7d212bbcbb9afea7be49ddc06057b44d93f52ad7d844e8160
//由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。
//已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。
//现在要把这些区域中的树（包括区域端点处的两棵树）移走。
//你的任务是计算将这些树都移走后，马路上还有多少棵树。